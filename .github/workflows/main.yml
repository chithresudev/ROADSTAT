name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Step 1: Checkout the code from GitHub
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 519842164857.dkr.ecr.ap-south-1.amazonaws.com

      # Step 4: Build and push the frontend Docker image
      - name: Build and push frontend Docker image
        run: |
          docker build -t roadlorry-frontend Frontend
          docker tag roadlorry-frontend:latest 519842164857.dkr.ecr.ap-south-1.amazonaws.com/roadlorry:frontend
          docker push 519842164857.dkr.ecr.ap-south-1.amazonaws.com/roadlorry:frontend

      # Step 5: Build and push the backend Docker image
      - name: Build and push backend Docker image
        run: |
          docker build -t roadlorry-backend Backend
          docker tag roadlorry-backend:latest 519842164857.dkr.ecr.ap-south-1.amazonaws.com/roadlorry:backend
          docker push 519842164857.dkr.ecr.ap-south-1.amazonaws.com/roadlorry:backend

      # Step 6: Update ECS service with the new task definition
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster arn:aws:ecs:ap-south-1:519842164857:cluster/DevCluster \
            --service devclusterservice \
            --task-definition roadlorry-task

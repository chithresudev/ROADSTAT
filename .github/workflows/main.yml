name: Deploy Node.js and React App to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Build Docker image for React frontend
      - name: Build Docker image for React frontend
        run: |
          cd Frontend
          docker build -t react-app:latest .

      # Step 3: Build Docker image for Node.js backend
      - name: Build Docker image for Node.js backend
        run: |
          cd Backend
          docker build -t node-backend:latest .

      # Step 4: Save React Docker image as .tar file
      - name: Save React Docker image to file
        run: docker save react-app:latest -o react-app.tar

      # Step 5: Save Node.js Docker image as .tar file
      - name: Save Node.js Docker image to file
        run: docker save node-backend:latest -o node-backend.tar

      # Step 6: Upload Docker images to EC2
      - name: Transfer Docker images to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          source: |
            react-app.tar
            node-backend.tar
          target: /home/ubuntu/

      # Step 7: SSH to EC2 and load Docker images
      - name: SSH to EC2 and deploy both containers
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            # Load and run React container
            docker load -i /home/ubuntu/react-app.tar
            docker stop react-app || true
            docker rm react-app || true
            docker run -d -p 80:80 --name react-app react-app:latest

            # Load and run Node.js container
            docker load -i /home/ubuntu/node-backend.tar
            docker stop node-backend || true
            docker rm node-backend || true
            docker run -d -p 5000:5000 --name node-backend node-backend:latest
